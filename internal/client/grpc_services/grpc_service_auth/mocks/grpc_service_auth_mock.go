// Code generated by MockGen. DO NOT EDIT.
// Source: grpc_service_auth.go

// Package grpc_service_auth is a generated GoMock package.
package grpc_service_auth

import (
	auth_model "GophKeeper/internal/client/model/auth_model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthAppService is a mock of AuthAppService interface.
type MockAuthAppService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthAppServiceMockRecorder
}

// MockAuthAppServiceMockRecorder is the mock recorder for MockAuthAppService.
type MockAuthAppServiceMockRecorder struct {
	mock *MockAuthAppService
}

// NewMockAuthAppService creates a new mock instance.
func NewMockAuthAppService(ctrl *gomock.Controller) *MockAuthAppService {
	mock := &MockAuthAppService{ctrl: ctrl}
	mock.recorder = &MockAuthAppServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthAppService) EXPECT() *MockAuthAppServiceMockRecorder {
	return m.recorder
}

// SignIn mocks base method.
func (m *MockAuthAppService) SignIn() auth_model.Credential {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignIn")
	ret0, _ := ret[0].(auth_model.Credential)
	return ret0
}

// SignIn indicates an expected call of SignIn.
func (mr *MockAuthAppServiceMockRecorder) SignIn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignIn", reflect.TypeOf((*MockAuthAppService)(nil).SignIn))
}

// SignUp mocks base method.
func (m *MockAuthAppService) SignUp() auth_model.Credential {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignUp")
	ret0, _ := ret[0].(auth_model.Credential)
	return ret0
}

// SignUp indicates an expected call of SignUp.
func (mr *MockAuthAppServiceMockRecorder) SignUp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUp", reflect.TypeOf((*MockAuthAppService)(nil).SignUp))
}
