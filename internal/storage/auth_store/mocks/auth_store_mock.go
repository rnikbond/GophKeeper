// Code generated by MockGen. DO NOT EDIT.
// Source: auth_store.go

// Package storage is a generated GoMock package.
package storage

import (
	auth "GophKeeper/internal/server/model/auth"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthStorage is a mock of AuthStorage interface.
type MockAuthStorage struct {
	ctrl     *gomock.Controller
	recorder *MockAuthStorageMockRecorder
}

// MockAuthStorageMockRecorder is the mock recorder for MockAuthStorage.
type MockAuthStorageMockRecorder struct {
	mock *MockAuthStorage
}

// NewMockAuthStorage creates a new mock instance.
func NewMockAuthStorage(ctrl *gomock.Controller) *MockAuthStorage {
	mock := &MockAuthStorage{ctrl: ctrl}
	mock.recorder = &MockAuthStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthStorage) EXPECT() *MockAuthStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAuthStorage) Create(cred auth.Credential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", cred)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockAuthStorageMockRecorder) Create(cred interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAuthStorage)(nil).Create), cred)
}

// Delete mocks base method.
func (m *MockAuthStorage) Delete(email string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", email)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockAuthStorageMockRecorder) Delete(email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockAuthStorage)(nil).Delete), email)
}

// Find mocks base method.
func (m *MockAuthStorage) Find(cred auth.Credential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", cred)
	ret0, _ := ret[0].(error)
	return ret0
}

// Find indicates an expected call of Find.
func (mr *MockAuthStorageMockRecorder) Find(cred interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockAuthStorage)(nil).Find), cred)
}

// Update mocks base method.
func (m *MockAuthStorage) Update(email, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", email, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockAuthStorageMockRecorder) Update(email, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAuthStorage)(nil).Update), email, password)
}
