// Code generated by MockGen. DO NOT EDIT.
// Source: text_store.go

// Package credential_store is a generated GoMock package.
package credential_store

import (
	text "GophKeeper/internal/server/model/text"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTextStorage is a mock of TextStorage interface.
type MockTextStorage struct {
	ctrl     *gomock.Controller
	recorder *MockTextStorageMockRecorder
}

// MockTextStorageMockRecorder is the mock recorder for MockTextStorage.
type MockTextStorageMockRecorder struct {
	mock *MockTextStorage
}

// NewMockTextStorage creates a new mock instance.
func NewMockTextStorage(ctrl *gomock.Controller) *MockTextStorage {
	mock := &MockTextStorage{ctrl: ctrl}
	mock.recorder = &MockTextStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTextStorage) EXPECT() *MockTextStorageMockRecorder {
	return m.recorder
}

// Change mocks base method.
func (m *MockTextStorage) Change(in text.DataTextFull) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Change", in)
	ret0, _ := ret[0].(error)
	return ret0
}

// Change indicates an expected call of Change.
func (mr *MockTextStorageMockRecorder) Change(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Change", reflect.TypeOf((*MockTextStorage)(nil).Change), in)
}

// Create mocks base method.
func (m *MockTextStorage) Create(data text.DataTextFull) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTextStorageMockRecorder) Create(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTextStorage)(nil).Create), data)
}

// Delete mocks base method.
func (m *MockTextStorage) Delete(in text.DataTextGet) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", in)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTextStorageMockRecorder) Delete(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTextStorage)(nil).Delete), in)
}

// Get mocks base method.
func (m *MockTextStorage) Get(in text.DataTextGet) (text.DataTextFull, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", in)
	ret0, _ := ret[0].(text.DataTextFull)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockTextStorageMockRecorder) Get(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTextStorage)(nil).Get), in)
}
